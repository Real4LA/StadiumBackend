services:
  - type: web
    name: stadium-backend
    env: python
    buildCommand: >
      pip install -r requirements.txt &&
      python manage.py collectstatic --noinput &&
      python manage.py migrate &&
      python manage.py shell -c "from django.contrib.auth.models import User; User.objects.create_superuser('admin', 'stadium.v0.1.0@gmail.com', 'StadiumAdmin2024!') if not User.objects.filter(username='admin').exists() else print('Superuser already exists')"
    startCommand: gunicorn backend.wsgi:application --bind 0.0.0.0:$PORT
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: DEBUG
        value: false
      - key: ALLOWED_HOSTS
        value: .onrender.com
      - key: CORS_ALLOWED_ORIGINS
        value: https://stadium-frontend.onrender.com
      - key: DATABASE_URL
        sync: false # Will be set manually in dashboard
      - key: SECRET_KEY
        generateValue: true
      - key: EMAIL_HOST
        value: smtp.gmail.com
      - key: EMAIL_PORT
        value: 587
      - key: EMAIL_USE_TLS
        value: true
      - key: EMAIL_HOST_USER
        value: stadium.v0.1.0@gmail.com
      - key: EMAIL_HOST_PASSWORD
        value: nzst ooly swnz hcwx
      - key: DEFAULT_FROM_EMAIL
        value: "Tottenham Stadium <stadium.v0.1.0@gmail.com>"

databases:
  - name: stadium-db
    databaseName: stadium
    plan: free
